import dataclasses
from dataclasses import field as FIELD
from textweight.maths.functions import sign as sign

@dataclasses.dataclass
class VEC2:
    x: float | int = FIELD(default=0.0)
    y: float | int = FIELD(default=0.0)
    def dot(self, b: VEC2) -> float: ...
    def mag(self) -> float: ...
    def distance(self, b: VEC2) -> float: ...
    def distance_manhattan(self, b: VEC2) -> float: ...
    def distance_hypot(self, b: VEC2) -> float: ...
    def distance_dot(self, b: VEC2) -> float: ...
    def unit(self) -> VEC2: ...
    def add(self, b: VEC2) -> VEC2: ...
    def sub(self, b: VEC2) -> VEC2: ...
    def mul(self, b: VEC2) -> VEC2: ...
    def div(self, b: VEC2) -> VEC2: ...
    def scale(self, s: float | int) -> VEC2: ...

@dataclasses.dataclass
class VEC3:
    x: float | int = FIELD(default=0.0)
    y: float | int = FIELD(default=0.0)
    z: float | int = FIELD(default=0.0)
    def dot(self, b: VEC3) -> float: ...
    def mag(self) -> float: ...
    def distance(self, b: VEC3) -> float: ...
    def unit(self) -> VEC3: ...
    def add(self, b: VEC3) -> VEC3: ...
    def sub(self, b: VEC3) -> VEC3: ...
    def mul(self, b: VEC3) -> VEC3: ...
    def div(self, b: VEC3) -> VEC3: ...
    def scale(self, s: float | int) -> VEC3: ...
